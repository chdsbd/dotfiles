# Line endings
newlines = auto


# Indenting
# num of columns to indent per level
indent_columns      = 2
# indent with tabs (1) or spaces (0)
indent_with_tabs    = 0
# align strings divided with '\'
indent_align_string = true
indent_class        = true


# Spacing
# spacing after '!' operator
sp_not                  = remove
# spacing around arithmetic operators
sp_arith                = force
# spacing before or after '++' or '--'
sp_incdec               = remove
# spacing around assignment operators
sp_assign               = force
# spacing around '&&' or '||'
sp_bool                 = force
# spacing around comparison operators
sp_compare              = force
# spacing inside parentheses
sp_inside_paren         = remove
# spacing between nested parentheses
sp_paren_paren          = remove
# spacing before '(' of 'if', 'for', 'switch', 'while', etc.
sp_before_sparen        = force
# spacing inside if condition parentheses
sp_inside_sparen        = remove
# spacing after ')' of 'if', 'for', 'switch', 'while', etc.
sp_after_sparen         = force
# spacing between ')' and '{' of 'if', 'for', 'switch', and 'while', etc.
sp_sparen_brace         = force
# spacing with commas
sp_before_comma         = remove
sp_after_comma          = force
# spacing inside function parentheses
sp_inside_fparen        = remove
# spacing between ')' and '{' of function
sp_fparen_brace         = force
# spacing after '//' of opening comment
sp_cmt_cpp_start        = force
# spacing after 'new', 'delete', etc.
sp_after_new            = force
# spacing 'try {'
sp_try_brace            = force
# spacing between '} else'
sp_else_brace           = force
# spacing between 'else {'
sp_brace_else           = force
# spacing between 'catch ('
sp_catch_paren          = force
# spacing between 'catch ()' and '{'
sp_catch_brace          = force
# spacing between '} catch'
sp_brace_catch          = force
# spacing between 'finally {'
sp_finally_brace        = force
# spacing between '} finally'
sp_brace_finally        = force
# spacing around the ':' in 'b ? t : f'
sp_cond_colon           = force
# spacing around the '?' in 'b ? t : f'
sp_cond_question        = force
# spacing after 'new', 'delete', and 'delete[]'
sp_after_new            = force
# spacing between function name 'main ('
sp_func_def_paren       = remove
# spacing inside empty 'for (;;)'
sp_after_semi_for_empty = remove
# spacing before []
sp_before_squares       = remove
# spacing inside non-empty []
sp_inside_square        = remove
# spacing before '...' in variadic functions
sp_before_ellipsis      = remove
# spacing inside java paren type casting
sp_inside_paren_cast    = remove
# spacing between 'throw ('
sp_throw_paren          = force
# spacing between 'throw' and anything else
sp_after_throw          = force

# Alignment
# keep extra space not required for alignment
align_keep_extra_space = false
# align assignment operators with a spacing of
align_assign_span      = 1


# New Line
# remove new lines between ')' '{' of various statements
nl_if_brace        = remove
# newline between '}' and 'else'
nl_brace_else      = remove
# newline between 'else if' and '{'
nl_elseif_brace    = remove
# newline between 'else' and '{'
nl_else_brace      = remove
# newline between 'for' and '{'
nl_for_brace       = remove
# Add or remove newline between 'while' and '{'
nl_while_brace     = remove
# newline between '}' and 'while' of 'do' statement
nl_brace_while     = remove
# newline between 'try' and '{'
nl_try_brace       = remove
# newline between 'catch' and '{'
nl_catch_brace     = remove
# newline between '}' and 'catch'
nl_brace_catch     = remove
# newline between 'do' and '{'
nl_do_brace        = remove
# Add or remove newline between 'switch' and '{'
nl_switch_brace    = remove
# newline between 'class' and '{'
nl_class_brace     = remove
# newline before 'case' statement
nl_before_case     = true
# newline between a function name and the opening '('
nl_func_paren      = remove
# newline between a function name and the opening '(' in the definition
nl_func_def_paren  = remove
# newline after '(' in a function declaration
nl_func_decl_start = remove
# newline after '(' in a function definition
nl_func_def_start  = remove
# maximum consecutive newlines
nl_max             = 4
# newline at the end of the file
nl_end_of_file     = remove


# Code Modification
# add braces for single line statements
mod_full_brace_do          = add
# add braces on single-line 'for' statement
mod_full_brace_for         = add
# add braces on single-line 'if' statement
mod_full_brace_if          = add
# add braces on single-line 'while' statement
mod_full_brace_while       = add
# remove superfluous semicolons
mod_remove_extra_semicolon = true
# sort imports for Java & D
mod_sort_import            = true


# Comments
cmt_convert_tab_to_spaces = true
# Try to wrap comments at cmt_width columns
cmt_width                 = 100
